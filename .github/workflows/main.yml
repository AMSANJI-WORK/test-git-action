name: Deploy to Server

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install sshpass
        run: |
          sudo apt-get update
          sudo apt-get install -y sshpass

      - name: Debug Secrets
        env:
          SERVER_USERNAME: ${{ secrets.SERVER_USERNAME }}
          SERVER_PASSWORD: ${{ secrets.SERVER_PASSWORD }}
          SERVER_IP: ${{ secrets.SERVER_IP }}
        run: |
          echo "Checking secrets..."
          echo "SERVER_USERNAME=$SERVER_USERNAME"
          echo "SERVER_IP=$SERVER_IP"
          echo "SERVER_PASSWORD is set"

      - name: Verify SSH Connection
        env:
          SERVER_USERNAME: ${{ secrets.SERVER_USERNAME }}
          SERVER_PASSWORD: ${{ secrets.SERVER_PASSWORD }}
          SERVER_IP: ${{ secrets.SERVER_IP }}
        run: |
          echo "Testing SSH connection..."
          sshpass -p "$SERVER_PASSWORD" ssh -o StrictHostKeyChecking=no "$SERVER_USERNAME@$SERVER_IP" "echo 'SSH connection successful'"

      - name: Deploy to Server
        env:
          SERVER_USERNAME: ${{ secrets.SERVER_USERNAME }}
          SERVER_PASSWORD: ${{ secrets.SERVER_PASSWORD }}
          SERVER_IP: ${{ secrets.SERVER_IP }}
        run: |
          sshpass -p "$SERVER_PASSWORD" ssh -o StrictHostKeyChecking=no "$SERVER_USERNAME@$SERVER_IP" << 'EOF'
            # Navigate to project directory
            cd ~/projects/test-git-action

            # Load NVM and set Node.js version
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"

            # Use the specified Node.js version
            nvm use v20.9.0

            # Stop the PM2 app
            pm2 stop Test-Action || true

            # Pull latest changes from the main branch
            git pull origin main --force

            # Clean up old build files and dependencies
            rm -rf .next node_modules

            # Install dependencies and build the app
            npm install
            npm run build

            # Restart the app using PM2
            pm2 restart Test-Action
            pm2 save
          EOF
